// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: matchmaking.proto
// Protobuf C++ Version: 5.29.3

#include "matchmaking.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace matchmaking {

inline constexpr StatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StatusRequest::StatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusRequestDefaultTypeInternal() {}
  union {
    StatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;

inline constexpr MatchmakingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        match_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        estimated_wait_time_{0},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MatchmakingResponse::MatchmakingResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MatchmakingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatchmakingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatchmakingResponseDefaultTypeInternal() {}
  union {
    MatchmakingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatchmakingResponseDefaultTypeInternal _MatchmakingResponse_default_instance_;

inline constexpr MMRUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        match_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mmr_{0},
        is_win_{false},
        score_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MMRUpdate::MMRUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MMRUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MMRUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MMRUpdateDefaultTypeInternal() {}
  union {
    MMRUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MMRUpdateDefaultTypeInternal _MMRUpdate_default_instance_;

inline constexpr MMRResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mmr_{0},
        rank_{0},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MMRResponse::MMRResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MMRResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MMRResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MMRResponseDefaultTypeInternal() {}
  union {
    MMRResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MMRResponseDefaultTypeInternal _MMRResponse_default_instance_;

inline constexpr MMRRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MMRRequest::MMRRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MMRRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MMRRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MMRRequestDefaultTypeInternal() {}
  union {
    MMRRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MMRRequestDefaultTypeInternal _MMRRequest_default_instance_;

inline constexpr JoinRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        game_mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        region_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JoinRequest::JoinRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JoinRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinRequestDefaultTypeInternal() {}
  union {
    JoinRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinRequestDefaultTypeInternal _JoinRequest_default_instance_;

inline constexpr CancelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelRequest::CancelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelRequestDefaultTypeInternal() {}
  union {
    CancelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelRequestDefaultTypeInternal _CancelRequest_default_instance_;
}  // namespace matchmaking
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_matchmaking_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_matchmaking_2eproto = nullptr;
const ::uint32_t
    TableStruct_matchmaking_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::matchmaking::JoinRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::matchmaking::JoinRequest, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::JoinRequest, _impl_.game_mode_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::JoinRequest, _impl_.region_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::matchmaking::CancelRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::matchmaking::CancelRequest, _impl_.user_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::matchmaking::StatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::matchmaking::StatusRequest, _impl_.user_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _impl_.server_address_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _impl_.estimated_wait_time_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MatchmakingResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRRequest, _impl_.user_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRUpdate, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRUpdate, _impl_.mmr_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRUpdate, _impl_.match_id_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRUpdate, _impl_.is_win_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRUpdate, _impl_.score_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRResponse, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRResponse, _impl_.mmr_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRResponse, _impl_.rank_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::matchmaking::MMRResponse, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::matchmaking::JoinRequest)},
        {11, -1, -1, sizeof(::matchmaking::CancelRequest)},
        {20, -1, -1, sizeof(::matchmaking::StatusRequest)},
        {29, -1, -1, sizeof(::matchmaking::MatchmakingResponse)},
        {45, -1, -1, sizeof(::matchmaking::MMRRequest)},
        {54, -1, -1, sizeof(::matchmaking::MMRUpdate)},
        {67, -1, -1, sizeof(::matchmaking::MMRResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::matchmaking::_JoinRequest_default_instance_._instance,
    &::matchmaking::_CancelRequest_default_instance_._instance,
    &::matchmaking::_StatusRequest_default_instance_._instance,
    &::matchmaking::_MatchmakingResponse_default_instance_._instance,
    &::matchmaking::_MMRRequest_default_instance_._instance,
    &::matchmaking::_MMRUpdate_default_instance_._instance,
    &::matchmaking::_MMRResponse_default_instance_._instance,
};
const char descriptor_table_protodef_matchmaking_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021matchmaking.proto\022\013matchmaking\"A\n\013Join"
    "Request\022\017\n\007user_id\030\001 \001(\t\022\021\n\tgame_mode\030\002 "
    "\001(\t\022\016\n\006region\030\003 \001(\t\" \n\rCancelRequest\022\017\n\007"
    "user_id\030\001 \001(\t\" \n\rStatusRequest\022\017\n\007user_i"
    "d\030\001 \001(\t\"\263\001\n\023MatchmakingResponse\022\017\n\007user_"
    "id\030\001 \001(\t\022\016\n\006status\030\002 \001(\t\022\020\n\010match_id\030\003 \001"
    "(\t\022\026\n\016server_address\030\004 \001(\t\022\022\n\ncreated_at"
    "\030\005 \001(\t\022\033\n\023estimated_wait_time\030\006 \001(\005\022\017\n\007s"
    "uccess\030\007 \001(\010\022\017\n\007message\030\010 \001(\t\"\035\n\nMMRRequ"
    "est\022\017\n\007user_id\030\001 \001(\t\"Z\n\tMMRUpdate\022\017\n\007use"
    "r_id\030\001 \001(\t\022\013\n\003mmr\030\002 \001(\002\022\020\n\010match_id\030\003 \001("
    "\t\022\016\n\006is_win\030\004 \001(\010\022\r\n\005score\030\005 \001(\005\"[\n\013MMRR"
    "esponse\022\017\n\007user_id\030\001 \001(\t\022\013\n\003mmr\030\002 \001(\002\022\014\n"
    "\004rank\030\003 \001(\005\022\017\n\007success\030\004 \001(\010\022\017\n\007message\030"
    "\005 \001(\t2\210\003\n\022MatchmakingService\022M\n\017JoinMatc"
    "hmaking\022\030.matchmaking.JoinRequest\032 .matc"
    "hmaking.MatchmakingResponse\022Q\n\021CancelMat"
    "chmaking\022\032.matchmaking.CancelRequest\032 .m"
    "atchmaking.MatchmakingResponse\022T\n\024GetMat"
    "chmakingStatus\022\032.matchmaking.StatusReque"
    "st\032 .matchmaking.MatchmakingResponse\022=\n\t"
    "UpdateMMR\022\026.matchmaking.MMRUpdate\032\030.matc"
    "hmaking.MMRResponse\022;\n\006GetMMR\022\027.matchmak"
    "ing.MMRRequest\032\030.matchmaking.MMRResponse"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_matchmaking_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_matchmaking_2eproto = {
    false,
    false,
    968,
    descriptor_table_protodef_matchmaking_2eproto,
    "matchmaking.proto",
    &descriptor_table_matchmaking_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_matchmaking_2eproto::offsets,
    file_level_enum_descriptors_matchmaking_2eproto,
    file_level_service_descriptors_matchmaking_2eproto,
};
namespace matchmaking {
// ===================================================================

class JoinRequest::_Internal {
 public:
};

JoinRequest::JoinRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:matchmaking.JoinRequest)
}
inline PROTOBUF_NDEBUG_INLINE JoinRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::matchmaking::JoinRequest& from_msg)
      : user_id_(arena, from.user_id_),
        game_mode_(arena, from.game_mode_),
        region_(arena, from.region_),
        _cached_size_{0} {}

JoinRequest::JoinRequest(
    ::google::protobuf::Arena* arena,
    const JoinRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JoinRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:matchmaking.JoinRequest)
}
inline PROTOBUF_NDEBUG_INLINE JoinRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        game_mode_(arena),
        region_(arena),
        _cached_size_{0} {}

inline void JoinRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
JoinRequest::~JoinRequest() {
  // @@protoc_insertion_point(destructor:matchmaking.JoinRequest)
  SharedDtor(*this);
}
inline void JoinRequest::SharedDtor(MessageLite& self) {
  JoinRequest& this_ = static_cast<JoinRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.game_mode_.Destroy();
  this_._impl_.region_.Destroy();
  this_._impl_.~Impl_();
}

inline void* JoinRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JoinRequest(arena);
}
constexpr auto JoinRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JoinRequest),
                                            alignof(JoinRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JoinRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JoinRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JoinRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JoinRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JoinRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JoinRequest>(), &JoinRequest::ByteSizeLong,
            &JoinRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_._cached_size_),
        false,
    },
    &JoinRequest::kDescriptorMethods,
    &descriptor_table_matchmaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JoinRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2> JoinRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::matchmaking::JoinRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_.user_id_)}},
    // string game_mode = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_.game_mode_)}},
    // string region = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_.region_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string game_mode = 2;
    {PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_.game_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string region = 3;
    {PROTOBUF_FIELD_OFFSET(JoinRequest, _impl_.region_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\7\11\6\0\0\0\0"
    "matchmaking.JoinRequest"
    "user_id"
    "game_mode"
    "region"
  }},
};

PROTOBUF_NOINLINE void JoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:matchmaking.JoinRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.game_mode_.ClearToEmpty();
  _impl_.region_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JoinRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JoinRequest& this_ = static_cast<const JoinRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JoinRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JoinRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:matchmaking.JoinRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.JoinRequest.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string game_mode = 2;
          if (!this_._internal_game_mode().empty()) {
            const std::string& _s = this_._internal_game_mode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.JoinRequest.game_mode");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string region = 3;
          if (!this_._internal_region().empty()) {
            const std::string& _s = this_._internal_region();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.JoinRequest.region");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:matchmaking.JoinRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JoinRequest::ByteSizeLong(const MessageLite& base) {
          const JoinRequest& this_ = static_cast<const JoinRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JoinRequest::ByteSizeLong() const {
          const JoinRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:matchmaking.JoinRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string game_mode = 2;
            if (!this_._internal_game_mode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_game_mode());
            }
            // string region = 3;
            if (!this_._internal_region().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_region());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JoinRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JoinRequest*>(&to_msg);
  auto& from = static_cast<const JoinRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:matchmaking.JoinRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_game_mode().empty()) {
    _this->_internal_set_game_mode(from._internal_game_mode());
  }
  if (!from._internal_region().empty()) {
    _this->_internal_set_region(from._internal_region());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JoinRequest::CopyFrom(const JoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:matchmaking.JoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JoinRequest::InternalSwap(JoinRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_mode_, &other->_impl_.game_mode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.region_, &other->_impl_.region_, arena);
}

::google::protobuf::Metadata JoinRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelRequest::_Internal {
 public:
};

CancelRequest::CancelRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:matchmaking.CancelRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::matchmaking::CancelRequest& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

CancelRequest::CancelRequest(
    ::google::protobuf::Arena* arena,
    const CancelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:matchmaking.CancelRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void CancelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CancelRequest::~CancelRequest() {
  // @@protoc_insertion_point(destructor:matchmaking.CancelRequest)
  SharedDtor(*this);
}
inline void CancelRequest::SharedDtor(MessageLite& self) {
  CancelRequest& this_ = static_cast<CancelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CancelRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelRequest(arena);
}
constexpr auto CancelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelRequest),
                                            alignof(CancelRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelRequest>(), &CancelRequest::ByteSizeLong,
            &CancelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_._cached_size_),
        false,
    },
    &CancelRequest::kDescriptorMethods,
    &descriptor_table_matchmaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> CancelRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::matchmaking::CancelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\7\0\0\0\0\0\0"
    "matchmaking.CancelRequest"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void CancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:matchmaking.CancelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelRequest& this_ = static_cast<const CancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:matchmaking.CancelRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.CancelRequest.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:matchmaking.CancelRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelRequest::ByteSizeLong(const MessageLite& base) {
          const CancelRequest& this_ = static_cast<const CancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelRequest::ByteSizeLong() const {
          const CancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:matchmaking.CancelRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelRequest*>(&to_msg);
  auto& from = static_cast<const CancelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:matchmaking.CancelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelRequest::CopyFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:matchmaking.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelRequest::InternalSwap(CancelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
}

::google::protobuf::Metadata CancelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatusRequest::_Internal {
 public:
};

StatusRequest::StatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:matchmaking.StatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE StatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::matchmaking::StatusRequest& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

StatusRequest::StatusRequest(
    ::google::protobuf::Arena* arena,
    const StatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:matchmaking.StatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE StatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void StatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StatusRequest::~StatusRequest() {
  // @@protoc_insertion_point(destructor:matchmaking.StatusRequest)
  SharedDtor(*this);
}
inline void StatusRequest::SharedDtor(MessageLite& self) {
  StatusRequest& this_ = static_cast<StatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StatusRequest(arena);
}
constexpr auto StatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StatusRequest),
                                            alignof(StatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StatusRequest>(), &StatusRequest::ByteSizeLong,
            &StatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StatusRequest, _impl_._cached_size_),
        false,
    },
    &StatusRequest::kDescriptorMethods,
    &descriptor_table_matchmaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> StatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::matchmaking::StatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StatusRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(StatusRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\7\0\0\0\0\0\0"
    "matchmaking.StatusRequest"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void StatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:matchmaking.StatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StatusRequest& this_ = static_cast<const StatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:matchmaking.StatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.StatusRequest.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:matchmaking.StatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StatusRequest::ByteSizeLong(const MessageLite& base) {
          const StatusRequest& this_ = static_cast<const StatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StatusRequest::ByteSizeLong() const {
          const StatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:matchmaking.StatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatusRequest*>(&to_msg);
  auto& from = static_cast<const StatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:matchmaking.StatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusRequest::CopyFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:matchmaking.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatusRequest::InternalSwap(StatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
}

::google::protobuf::Metadata StatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MatchmakingResponse::_Internal {
 public:
};

MatchmakingResponse::MatchmakingResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:matchmaking.MatchmakingResponse)
}
inline PROTOBUF_NDEBUG_INLINE MatchmakingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::matchmaking::MatchmakingResponse& from_msg)
      : user_id_(arena, from.user_id_),
        status_(arena, from.status_),
        match_id_(arena, from.match_id_),
        server_address_(arena, from.server_address_),
        created_at_(arena, from.created_at_),
        message_(arena, from.message_),
        _cached_size_{0} {}

MatchmakingResponse::MatchmakingResponse(
    ::google::protobuf::Arena* arena,
    const MatchmakingResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MatchmakingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, estimated_wait_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, estimated_wait_time_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, estimated_wait_time_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:matchmaking.MatchmakingResponse)
}
inline PROTOBUF_NDEBUG_INLINE MatchmakingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        status_(arena),
        match_id_(arena),
        server_address_(arena),
        created_at_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void MatchmakingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, estimated_wait_time_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, estimated_wait_time_) +
               sizeof(Impl_::success_));
}
MatchmakingResponse::~MatchmakingResponse() {
  // @@protoc_insertion_point(destructor:matchmaking.MatchmakingResponse)
  SharedDtor(*this);
}
inline void MatchmakingResponse::SharedDtor(MessageLite& self) {
  MatchmakingResponse& this_ = static_cast<MatchmakingResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.match_id_.Destroy();
  this_._impl_.server_address_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MatchmakingResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MatchmakingResponse(arena);
}
constexpr auto MatchmakingResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MatchmakingResponse),
                                            alignof(MatchmakingResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MatchmakingResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MatchmakingResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MatchmakingResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MatchmakingResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MatchmakingResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MatchmakingResponse>(), &MatchmakingResponse::ByteSizeLong,
            &MatchmakingResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_._cached_size_),
        false,
    },
    &MatchmakingResponse::kDescriptorMethods,
    &descriptor_table_matchmaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MatchmakingResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 100, 2> MatchmakingResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::matchmaking::MatchmakingResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.message_)}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.user_id_)}},
    // string status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.status_)}},
    // string match_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.match_id_)}},
    // string server_address = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.server_address_)}},
    // string created_at = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.created_at_)}},
    // int32 estimated_wait_time = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatchmakingResponse, _impl_.estimated_wait_time_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.estimated_wait_time_)}},
    // bool success = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MatchmakingResponse, _impl_.success_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 2;
    {PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string match_id = 3;
    {PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.match_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string server_address = 4;
    {PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.server_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_at = 5;
    {PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 estimated_wait_time = 6;
    {PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.estimated_wait_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool success = 7;
    {PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 8;
    {PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\7\6\10\16\12\0\0\7\0\0\0\0\0\0\0"
    "matchmaking.MatchmakingResponse"
    "user_id"
    "status"
    "match_id"
    "server_address"
    "created_at"
    "message"
  }},
};

PROTOBUF_NOINLINE void MatchmakingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:matchmaking.MatchmakingResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.match_id_.ClearToEmpty();
  _impl_.server_address_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.estimated_wait_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.estimated_wait_time_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MatchmakingResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MatchmakingResponse& this_ = static_cast<const MatchmakingResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MatchmakingResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MatchmakingResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:matchmaking.MatchmakingResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MatchmakingResponse.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string status = 2;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MatchmakingResponse.status");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string match_id = 3;
          if (!this_._internal_match_id().empty()) {
            const std::string& _s = this_._internal_match_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MatchmakingResponse.match_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string server_address = 4;
          if (!this_._internal_server_address().empty()) {
            const std::string& _s = this_._internal_server_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MatchmakingResponse.server_address");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string created_at = 5;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MatchmakingResponse.created_at");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int32 estimated_wait_time = 6;
          if (this_._internal_estimated_wait_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_estimated_wait_time(), target);
          }

          // bool success = 7;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_success(), target);
          }

          // string message = 8;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MatchmakingResponse.message");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:matchmaking.MatchmakingResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MatchmakingResponse::ByteSizeLong(const MessageLite& base) {
          const MatchmakingResponse& this_ = static_cast<const MatchmakingResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MatchmakingResponse::ByteSizeLong() const {
          const MatchmakingResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:matchmaking.MatchmakingResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string status = 2;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string match_id = 3;
            if (!this_._internal_match_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_match_id());
            }
            // string server_address = 4;
            if (!this_._internal_server_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_server_address());
            }
            // string created_at = 5;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // string message = 8;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // int32 estimated_wait_time = 6;
            if (this_._internal_estimated_wait_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_estimated_wait_time());
            }
            // bool success = 7;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MatchmakingResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MatchmakingResponse*>(&to_msg);
  auto& from = static_cast<const MatchmakingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:matchmaking.MatchmakingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_match_id().empty()) {
    _this->_internal_set_match_id(from._internal_match_id());
  }
  if (!from._internal_server_address().empty()) {
    _this->_internal_set_server_address(from._internal_server_address());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_estimated_wait_time() != 0) {
    _this->_impl_.estimated_wait_time_ = from._impl_.estimated_wait_time_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MatchmakingResponse::CopyFrom(const MatchmakingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:matchmaking.MatchmakingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MatchmakingResponse::InternalSwap(MatchmakingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.match_id_, &other->_impl_.match_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_address_, &other->_impl_.server_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.success_)
      + sizeof(MatchmakingResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(MatchmakingResponse, _impl_.estimated_wait_time_)>(
          reinterpret_cast<char*>(&_impl_.estimated_wait_time_),
          reinterpret_cast<char*>(&other->_impl_.estimated_wait_time_));
}

::google::protobuf::Metadata MatchmakingResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MMRRequest::_Internal {
 public:
};

MMRRequest::MMRRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:matchmaking.MMRRequest)
}
inline PROTOBUF_NDEBUG_INLINE MMRRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::matchmaking::MMRRequest& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

MMRRequest::MMRRequest(
    ::google::protobuf::Arena* arena,
    const MMRRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MMRRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:matchmaking.MMRRequest)
}
inline PROTOBUF_NDEBUG_INLINE MMRRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void MMRRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MMRRequest::~MMRRequest() {
  // @@protoc_insertion_point(destructor:matchmaking.MMRRequest)
  SharedDtor(*this);
}
inline void MMRRequest::SharedDtor(MessageLite& self) {
  MMRRequest& this_ = static_cast<MMRRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MMRRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MMRRequest(arena);
}
constexpr auto MMRRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MMRRequest),
                                            alignof(MMRRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MMRRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MMRRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MMRRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MMRRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MMRRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MMRRequest>(), &MMRRequest::ByteSizeLong,
            &MMRRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MMRRequest, _impl_._cached_size_),
        false,
    },
    &MMRRequest::kDescriptorMethods,
    &descriptor_table_matchmaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MMRRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> MMRRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::matchmaking::MMRRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MMRRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(MMRRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\7\0\0\0\0\0\0"
    "matchmaking.MMRRequest"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void MMRRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:matchmaking.MMRRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MMRRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MMRRequest& this_ = static_cast<const MMRRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MMRRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MMRRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:matchmaking.MMRRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MMRRequest.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:matchmaking.MMRRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MMRRequest::ByteSizeLong(const MessageLite& base) {
          const MMRRequest& this_ = static_cast<const MMRRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MMRRequest::ByteSizeLong() const {
          const MMRRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:matchmaking.MMRRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MMRRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MMRRequest*>(&to_msg);
  auto& from = static_cast<const MMRRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:matchmaking.MMRRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MMRRequest::CopyFrom(const MMRRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:matchmaking.MMRRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MMRRequest::InternalSwap(MMRRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
}

::google::protobuf::Metadata MMRRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MMRUpdate::_Internal {
 public:
};

MMRUpdate::MMRUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:matchmaking.MMRUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MMRUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::matchmaking::MMRUpdate& from_msg)
      : user_id_(arena, from.user_id_),
        match_id_(arena, from.match_id_),
        _cached_size_{0} {}

MMRUpdate::MMRUpdate(
    ::google::protobuf::Arena* arena,
    const MMRUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MMRUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mmr_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, mmr_),
           offsetof(Impl_, score_) -
               offsetof(Impl_, mmr_) +
               sizeof(Impl_::score_));

  // @@protoc_insertion_point(copy_constructor:matchmaking.MMRUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MMRUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        match_id_(arena),
        _cached_size_{0} {}

inline void MMRUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mmr_),
           0,
           offsetof(Impl_, score_) -
               offsetof(Impl_, mmr_) +
               sizeof(Impl_::score_));
}
MMRUpdate::~MMRUpdate() {
  // @@protoc_insertion_point(destructor:matchmaking.MMRUpdate)
  SharedDtor(*this);
}
inline void MMRUpdate::SharedDtor(MessageLite& self) {
  MMRUpdate& this_ = static_cast<MMRUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.match_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MMRUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MMRUpdate(arena);
}
constexpr auto MMRUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MMRUpdate),
                                            alignof(MMRUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MMRUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MMRUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MMRUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MMRUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MMRUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MMRUpdate>(), &MMRUpdate::ByteSizeLong,
            &MMRUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_._cached_size_),
        false,
    },
    &MMRUpdate::kDescriptorMethods,
    &descriptor_table_matchmaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MMRUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 45, 2> MMRUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::matchmaking::MMRUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.user_id_)}},
    // float mmr = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.mmr_)}},
    // string match_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.match_id_)}},
    // bool is_win = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MMRUpdate, _impl_.is_win_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.is_win_)}},
    // int32 score = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MMRUpdate, _impl_.score_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.score_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float mmr = 2;
    {PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.mmr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string match_id = 3;
    {PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.match_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_win = 4;
    {PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.is_win_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 score = 5;
    {PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\25\7\0\10\0\0\0\0"
    "matchmaking.MMRUpdate"
    "user_id"
    "match_id"
  }},
};

PROTOBUF_NOINLINE void MMRUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:matchmaking.MMRUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.match_id_.ClearToEmpty();
  ::memset(&_impl_.mmr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.score_) -
      reinterpret_cast<char*>(&_impl_.mmr_)) + sizeof(_impl_.score_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MMRUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MMRUpdate& this_ = static_cast<const MMRUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MMRUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MMRUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:matchmaking.MMRUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MMRUpdate.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float mmr = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_mmr()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_mmr(), target);
          }

          // string match_id = 3;
          if (!this_._internal_match_id().empty()) {
            const std::string& _s = this_._internal_match_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MMRUpdate.match_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool is_win = 4;
          if (this_._internal_is_win() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is_win(), target);
          }

          // int32 score = 5;
          if (this_._internal_score() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_score(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:matchmaking.MMRUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MMRUpdate::ByteSizeLong(const MessageLite& base) {
          const MMRUpdate& this_ = static_cast<const MMRUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MMRUpdate::ByteSizeLong() const {
          const MMRUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:matchmaking.MMRUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string match_id = 3;
            if (!this_._internal_match_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_match_id());
            }
            // float mmr = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_mmr()) != 0) {
              total_size += 5;
            }
            // bool is_win = 4;
            if (this_._internal_is_win() != 0) {
              total_size += 2;
            }
            // int32 score = 5;
            if (this_._internal_score() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_score());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MMRUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MMRUpdate*>(&to_msg);
  auto& from = static_cast<const MMRUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:matchmaking.MMRUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_match_id().empty()) {
    _this->_internal_set_match_id(from._internal_match_id());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_mmr()) != 0) {
    _this->_impl_.mmr_ = from._impl_.mmr_;
  }
  if (from._internal_is_win() != 0) {
    _this->_impl_.is_win_ = from._impl_.is_win_;
  }
  if (from._internal_score() != 0) {
    _this->_impl_.score_ = from._impl_.score_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MMRUpdate::CopyFrom(const MMRUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:matchmaking.MMRUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MMRUpdate::InternalSwap(MMRUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.match_id_, &other->_impl_.match_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.score_)
      + sizeof(MMRUpdate::_impl_.score_)
      - PROTOBUF_FIELD_OFFSET(MMRUpdate, _impl_.mmr_)>(
          reinterpret_cast<char*>(&_impl_.mmr_),
          reinterpret_cast<char*>(&other->_impl_.mmr_));
}

::google::protobuf::Metadata MMRUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MMRResponse::_Internal {
 public:
};

MMRResponse::MMRResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:matchmaking.MMRResponse)
}
inline PROTOBUF_NDEBUG_INLINE MMRResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::matchmaking::MMRResponse& from_msg)
      : user_id_(arena, from.user_id_),
        message_(arena, from.message_),
        _cached_size_{0} {}

MMRResponse::MMRResponse(
    ::google::protobuf::Arena* arena,
    const MMRResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MMRResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mmr_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, mmr_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, mmr_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:matchmaking.MMRResponse)
}
inline PROTOBUF_NDEBUG_INLINE MMRResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void MMRResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mmr_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, mmr_) +
               sizeof(Impl_::success_));
}
MMRResponse::~MMRResponse() {
  // @@protoc_insertion_point(destructor:matchmaking.MMRResponse)
  SharedDtor(*this);
}
inline void MMRResponse::SharedDtor(MessageLite& self) {
  MMRResponse& this_ = static_cast<MMRResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MMRResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MMRResponse(arena);
}
constexpr auto MMRResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MMRResponse),
                                            alignof(MMRResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MMRResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MMRResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MMRResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MMRResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MMRResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MMRResponse>(), &MMRResponse::ByteSizeLong,
            &MMRResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_._cached_size_),
        false,
    },
    &MMRResponse::kDescriptorMethods,
    &descriptor_table_matchmaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MMRResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 46, 2> MMRResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::matchmaking::MMRResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.user_id_)}},
    // float mmr = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.mmr_)}},
    // int32 rank = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MMRResponse, _impl_.rank_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.rank_)}},
    // bool success = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MMRResponse, _impl_.success_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.success_)}},
    // string message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float mmr = 2;
    {PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.mmr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 rank = 3;
    {PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.rank_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool success = 4;
    {PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 5;
    {PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\7\0\0\0\7\0\0"
    "matchmaking.MMRResponse"
    "user_id"
    "message"
  }},
};

PROTOBUF_NOINLINE void MMRResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:matchmaking.MMRResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.mmr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.mmr_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MMRResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MMRResponse& this_ = static_cast<const MMRResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MMRResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MMRResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:matchmaking.MMRResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MMRResponse.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float mmr = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_mmr()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_mmr(), target);
          }

          // int32 rank = 3;
          if (this_._internal_rank() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_rank(), target);
          }

          // bool success = 4;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_success(), target);
          }

          // string message = 5;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "matchmaking.MMRResponse.message");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:matchmaking.MMRResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MMRResponse::ByteSizeLong(const MessageLite& base) {
          const MMRResponse& this_ = static_cast<const MMRResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MMRResponse::ByteSizeLong() const {
          const MMRResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:matchmaking.MMRResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string message = 5;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // float mmr = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_mmr()) != 0) {
              total_size += 5;
            }
            // int32 rank = 3;
            if (this_._internal_rank() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_rank());
            }
            // bool success = 4;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MMRResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MMRResponse*>(&to_msg);
  auto& from = static_cast<const MMRResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:matchmaking.MMRResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_mmr()) != 0) {
    _this->_impl_.mmr_ = from._impl_.mmr_;
  }
  if (from._internal_rank() != 0) {
    _this->_impl_.rank_ = from._impl_.rank_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MMRResponse::CopyFrom(const MMRResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:matchmaking.MMRResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MMRResponse::InternalSwap(MMRResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.success_)
      + sizeof(MMRResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(MMRResponse, _impl_.mmr_)>(
          reinterpret_cast<char*>(&_impl_.mmr_),
          reinterpret_cast<char*>(&other->_impl_.mmr_));
}

::google::protobuf::Metadata MMRResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace matchmaking
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_matchmaking_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
