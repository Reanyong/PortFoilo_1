// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: backend_api.proto
// Protobuf C++ Version: 5.29.3

#include "backend_api.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace backend {

inline constexpr UserResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserResponse::UserResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserResponseDefaultTypeInternal() {}
  union {
    UserResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserResponseDefaultTypeInternal _UserResponse_default_instance_;

inline constexpr UserRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserRequest::UserRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRequestDefaultTypeInternal() {}
  union {
    UserRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRequestDefaultTypeInternal _UserRequest_default_instance_;

inline constexpr ScoreUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        score_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScoreUpdate::ScoreUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScoreUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScoreUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScoreUpdateDefaultTypeInternal() {}
  union {
    ScoreUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScoreUpdateDefaultTypeInternal _ScoreUpdate_default_instance_;

inline constexpr ScoreResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_score_{0},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScoreResponse::ScoreResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScoreResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScoreResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScoreResponseDefaultTypeInternal() {}
  union {
    ScoreResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScoreResponseDefaultTypeInternal _ScoreResponse_default_instance_;

inline constexpr RankingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : limit_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RankingRequest::RankingRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RankingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RankingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RankingRequestDefaultTypeInternal() {}
  union {
    RankingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RankingRequestDefaultTypeInternal _RankingRequest_default_instance_;

inline constexpr RankingEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rank_{0},
        score_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RankingEntry::RankingEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RankingEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RankingEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RankingEntryDefaultTypeInternal() {}
  union {
    RankingEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RankingEntryDefaultTypeInternal _RankingEntry_default_instance_;

inline constexpr NewUser::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NewUser::NewUser(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NewUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewUserDefaultTypeInternal() {}
  union {
    NewUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewUserDefaultTypeInternal _NewUser_default_instance_;

inline constexpr RankingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rankings_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RankingResponse::RankingResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RankingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RankingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RankingResponseDefaultTypeInternal() {}
  union {
    RankingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RankingResponseDefaultTypeInternal _RankingResponse_default_instance_;
}  // namespace backend
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_backend_5fapi_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_backend_5fapi_2eproto = nullptr;
const ::uint32_t
    TableStruct_backend_5fapi_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::backend::UserRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::backend::UserRequest, _impl_.user_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::backend::NewUser, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::backend::NewUser, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::backend::NewUser, _impl_.email_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::backend::UserResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::backend::UserResponse, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::backend::UserResponse, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::backend::UserResponse, _impl_.email_),
        PROTOBUF_FIELD_OFFSET(::backend::UserResponse, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::backend::UserResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::backend::UserResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::backend::ScoreUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::backend::ScoreUpdate, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::backend::ScoreUpdate, _impl_.score_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::backend::ScoreResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::backend::ScoreResponse, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::backend::ScoreResponse, _impl_.new_score_),
        PROTOBUF_FIELD_OFFSET(::backend::ScoreResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::backend::ScoreResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::backend::RankingRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::backend::RankingRequest, _impl_.limit_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::backend::RankingEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::backend::RankingEntry, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::backend::RankingEntry, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::backend::RankingEntry, _impl_.rank_),
        PROTOBUF_FIELD_OFFSET(::backend::RankingEntry, _impl_.score_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::backend::RankingResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::backend::RankingResponse, _impl_.rankings_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::backend::UserRequest)},
        {9, -1, -1, sizeof(::backend::NewUser)},
        {19, -1, -1, sizeof(::backend::UserResponse)},
        {33, -1, -1, sizeof(::backend::ScoreUpdate)},
        {43, -1, -1, sizeof(::backend::ScoreResponse)},
        {55, -1, -1, sizeof(::backend::RankingRequest)},
        {64, -1, -1, sizeof(::backend::RankingEntry)},
        {76, -1, -1, sizeof(::backend::RankingResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::backend::_UserRequest_default_instance_._instance,
    &::backend::_NewUser_default_instance_._instance,
    &::backend::_UserResponse_default_instance_._instance,
    &::backend::_ScoreUpdate_default_instance_._instance,
    &::backend::_ScoreResponse_default_instance_._instance,
    &::backend::_RankingRequest_default_instance_._instance,
    &::backend::_RankingEntry_default_instance_._instance,
    &::backend::_RankingResponse_default_instance_._instance,
};
const char descriptor_table_protodef_backend_5fapi_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021backend_api.proto\022\007backend\"\036\n\013UserRequ"
    "est\022\017\n\007user_id\030\001 \001(\t\"*\n\007NewUser\022\020\n\010usern"
    "ame\030\001 \001(\t\022\r\n\005email\030\002 \001(\t\"v\n\014UserResponse"
    "\022\017\n\007user_id\030\001 \001(\t\022\020\n\010username\030\002 \001(\t\022\r\n\005e"
    "mail\030\003 \001(\t\022\022\n\ncreated_at\030\004 \001(\t\022\017\n\007succes"
    "s\030\005 \001(\010\022\017\n\007message\030\006 \001(\t\"-\n\013ScoreUpdate\022"
    "\017\n\007user_id\030\001 \001(\t\022\r\n\005score\030\002 \001(\005\"U\n\rScore"
    "Response\022\017\n\007user_id\030\001 \001(\t\022\021\n\tnew_score\030\002"
    " \001(\005\022\017\n\007success\030\003 \001(\010\022\017\n\007message\030\004 \001(\t\"\037"
    "\n\016RankingRequest\022\r\n\005limit\030\001 \001(\005\"N\n\014Ranki"
    "ngEntry\022\017\n\007user_id\030\001 \001(\t\022\020\n\010username\030\002 \001"
    "(\t\022\014\n\004rank\030\003 \001(\005\022\r\n\005score\030\004 \001(\005\":\n\017Ranki"
    "ngResponse\022\'\n\010rankings\030\001 \003(\0132\025.backend.R"
    "ankingEntry2\372\001\n\016BackendService\0226\n\007GetUse"
    "r\022\024.backend.UserRequest\032\025.backend.UserRe"
    "sponse\0222\n\007AddUser\022\020.backend.NewUser\032\025.ba"
    "ckend.UserResponse\022;\n\013UpdateScore\022\024.back"
    "end.ScoreUpdate\032\026.backend.ScoreResponse\022"
    "\?\n\nGetRanking\022\027.backend.RankingRequest\032\030"
    ".backend.RankingResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_backend_5fapi_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_backend_5fapi_2eproto = {
    false,
    false,
    792,
    descriptor_table_protodef_backend_5fapi_2eproto,
    "backend_api.proto",
    &descriptor_table_backend_5fapi_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_backend_5fapi_2eproto::offsets,
    file_level_enum_descriptors_backend_5fapi_2eproto,
    file_level_service_descriptors_backend_5fapi_2eproto,
};
namespace backend {
// ===================================================================

class UserRequest::_Internal {
 public:
};

UserRequest::UserRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:backend.UserRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::backend::UserRequest& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

UserRequest::UserRequest(
    ::google::protobuf::Arena* arena,
    const UserRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:backend.UserRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void UserRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:backend.UserRequest)
  SharedDtor(*this);
}
inline void UserRequest::SharedDtor(MessageLite& self) {
  UserRequest& this_ = static_cast<UserRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UserRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserRequest(arena);
}
constexpr auto UserRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UserRequest),
                                            alignof(UserRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UserRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UserRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UserRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UserRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UserRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UserRequest>(), &UserRequest::ByteSizeLong,
            &UserRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UserRequest, _impl_._cached_size_),
        false,
    },
    &UserRequest::kDescriptorMethods,
    &descriptor_table_backend_5fapi_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UserRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 35, 2> UserRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::backend::UserRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(UserRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\7\0\0\0\0\0\0"
    "backend.UserRequest"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.UserRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserRequest& this_ = static_cast<const UserRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:backend.UserRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.UserRequest.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:backend.UserRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserRequest::ByteSizeLong(const MessageLite& base) {
          const UserRequest& this_ = static_cast<const UserRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserRequest::ByteSizeLong() const {
          const UserRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:backend.UserRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserRequest*>(&to_msg);
  auto& from = static_cast<const UserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.UserRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserRequest::InternalSwap(UserRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
}

::google::protobuf::Metadata UserRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NewUser::_Internal {
 public:
};

NewUser::NewUser(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:backend.NewUser)
}
inline PROTOBUF_NDEBUG_INLINE NewUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::backend::NewUser& from_msg)
      : username_(arena, from.username_),
        email_(arena, from.email_),
        _cached_size_{0} {}

NewUser::NewUser(
    ::google::protobuf::Arena* arena,
    const NewUser& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NewUser* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:backend.NewUser)
}
inline PROTOBUF_NDEBUG_INLINE NewUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        email_(arena),
        _cached_size_{0} {}

inline void NewUser::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NewUser::~NewUser() {
  // @@protoc_insertion_point(destructor:backend.NewUser)
  SharedDtor(*this);
}
inline void NewUser::SharedDtor(MessageLite& self) {
  NewUser& this_ = static_cast<NewUser&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.email_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NewUser::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NewUser(arena);
}
constexpr auto NewUser::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NewUser),
                                            alignof(NewUser));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NewUser::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NewUser_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NewUser::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NewUser>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NewUser::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NewUser>(), &NewUser::ByteSizeLong,
            &NewUser::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NewUser, _impl_._cached_size_),
        false,
    },
    &NewUser::kDescriptorMethods,
    &descriptor_table_backend_5fapi_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NewUser::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> NewUser::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::backend::NewUser>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string email = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NewUser, _impl_.email_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NewUser, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(NewUser, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 2;
    {PROTOBUF_FIELD_OFFSET(NewUser, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\10\5\0\0\0\0\0"
    "backend.NewUser"
    "username"
    "email"
  }},
};

PROTOBUF_NOINLINE void NewUser::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.NewUser)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NewUser::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NewUser& this_ = static_cast<const NewUser&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NewUser::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NewUser& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:backend.NewUser)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.NewUser.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string email = 2;
          if (!this_._internal_email().empty()) {
            const std::string& _s = this_._internal_email();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.NewUser.email");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:backend.NewUser)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NewUser::ByteSizeLong(const MessageLite& base) {
          const NewUser& this_ = static_cast<const NewUser&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NewUser::ByteSizeLong() const {
          const NewUser& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:backend.NewUser)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string email = 2;
            if (!this_._internal_email().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_email());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NewUser::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewUser*>(&to_msg);
  auto& from = static_cast<const NewUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.NewUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewUser::CopyFrom(const NewUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.NewUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NewUser::InternalSwap(NewUser* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
}

::google::protobuf::Metadata NewUser::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserResponse::_Internal {
 public:
};

UserResponse::UserResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:backend.UserResponse)
}
inline PROTOBUF_NDEBUG_INLINE UserResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::backend::UserResponse& from_msg)
      : user_id_(arena, from.user_id_),
        username_(arena, from.username_),
        email_(arena, from.email_),
        created_at_(arena, from.created_at_),
        message_(arena, from.message_),
        _cached_size_{0} {}

UserResponse::UserResponse(
    ::google::protobuf::Arena* arena,
    const UserResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UserResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:backend.UserResponse)
}
inline PROTOBUF_NDEBUG_INLINE UserResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        username_(arena),
        email_(arena),
        created_at_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void UserResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
UserResponse::~UserResponse() {
  // @@protoc_insertion_point(destructor:backend.UserResponse)
  SharedDtor(*this);
}
inline void UserResponse::SharedDtor(MessageLite& self) {
  UserResponse& this_ = static_cast<UserResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.username_.Destroy();
  this_._impl_.email_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UserResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UserResponse(arena);
}
constexpr auto UserResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UserResponse),
                                            alignof(UserResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UserResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UserResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UserResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UserResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UserResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UserResponse>(), &UserResponse::ByteSizeLong,
            &UserResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UserResponse, _impl_._cached_size_),
        false,
    },
    &UserResponse::kDescriptorMethods,
    &descriptor_table_backend_5fapi_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UserResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 66, 2> UserResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::backend::UserResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.user_id_)}},
    // string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.username_)}},
    // string email = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.email_)}},
    // string created_at = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.created_at_)}},
    // bool success = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UserResponse, _impl_.success_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.success_)}},
    // string message = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.message_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 2;
    {PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 3;
    {PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_at = 4;
    {PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool success = 5;
    {PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 6;
    {PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\7\10\5\12\0\7\0"
    "backend.UserResponse"
    "user_id"
    "username"
    "email"
    "created_at"
    "message"
  }},
};

PROTOBUF_NOINLINE void UserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.UserResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UserResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UserResponse& this_ = static_cast<const UserResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UserResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UserResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:backend.UserResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.UserResponse.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string username = 2;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.UserResponse.username");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string email = 3;
          if (!this_._internal_email().empty()) {
            const std::string& _s = this_._internal_email();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.UserResponse.email");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string created_at = 4;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.UserResponse.created_at");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bool success = 5;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_success(), target);
          }

          // string message = 6;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.UserResponse.message");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:backend.UserResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UserResponse::ByteSizeLong(const MessageLite& base) {
          const UserResponse& this_ = static_cast<const UserResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UserResponse::ByteSizeLong() const {
          const UserResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:backend.UserResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string username = 2;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string email = 3;
            if (!this_._internal_email().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_email());
            }
            // string created_at = 4;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // string message = 6;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 5;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UserResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserResponse*>(&to_msg);
  auto& from = static_cast<const UserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.UserResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserResponse::CopyFrom(const UserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.UserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserResponse::InternalSwap(UserResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata UserResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScoreUpdate::_Internal {
 public:
};

ScoreUpdate::ScoreUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:backend.ScoreUpdate)
}
inline PROTOBUF_NDEBUG_INLINE ScoreUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::backend::ScoreUpdate& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

ScoreUpdate::ScoreUpdate(
    ::google::protobuf::Arena* arena,
    const ScoreUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScoreUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.score_ = from._impl_.score_;

  // @@protoc_insertion_point(copy_constructor:backend.ScoreUpdate)
}
inline PROTOBUF_NDEBUG_INLINE ScoreUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void ScoreUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.score_ = {};
}
ScoreUpdate::~ScoreUpdate() {
  // @@protoc_insertion_point(destructor:backend.ScoreUpdate)
  SharedDtor(*this);
}
inline void ScoreUpdate::SharedDtor(MessageLite& self) {
  ScoreUpdate& this_ = static_cast<ScoreUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ScoreUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScoreUpdate(arena);
}
constexpr auto ScoreUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ScoreUpdate),
                                            alignof(ScoreUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScoreUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScoreUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScoreUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScoreUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScoreUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScoreUpdate>(), &ScoreUpdate::ByteSizeLong,
            &ScoreUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_._cached_size_),
        false,
    },
    &ScoreUpdate::kDescriptorMethods,
    &descriptor_table_backend_5fapi_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScoreUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 35, 2> ScoreUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::backend::ScoreUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 score = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScoreUpdate, _impl_.score_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.score_)}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 score = 2;
    {PROTOBUF_FIELD_OFFSET(ScoreUpdate, _impl_.score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\23\7\0\0\0\0\0\0"
    "backend.ScoreUpdate"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void ScoreUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.ScoreUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.score_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScoreUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScoreUpdate& this_ = static_cast<const ScoreUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScoreUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScoreUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:backend.ScoreUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.ScoreUpdate.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 score = 2;
          if (this_._internal_score() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_score(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:backend.ScoreUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScoreUpdate::ByteSizeLong(const MessageLite& base) {
          const ScoreUpdate& this_ = static_cast<const ScoreUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScoreUpdate::ByteSizeLong() const {
          const ScoreUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:backend.ScoreUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // int32 score = 2;
            if (this_._internal_score() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_score());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScoreUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScoreUpdate*>(&to_msg);
  auto& from = static_cast<const ScoreUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.ScoreUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_score() != 0) {
    _this->_impl_.score_ = from._impl_.score_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScoreUpdate::CopyFrom(const ScoreUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.ScoreUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScoreUpdate::InternalSwap(ScoreUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
        swap(_impl_.score_, other->_impl_.score_);
}

::google::protobuf::Metadata ScoreUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScoreResponse::_Internal {
 public:
};

ScoreResponse::ScoreResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:backend.ScoreResponse)
}
inline PROTOBUF_NDEBUG_INLINE ScoreResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::backend::ScoreResponse& from_msg)
      : user_id_(arena, from.user_id_),
        message_(arena, from.message_),
        _cached_size_{0} {}

ScoreResponse::ScoreResponse(
    ::google::protobuf::Arena* arena,
    const ScoreResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScoreResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_score_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, new_score_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, new_score_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:backend.ScoreResponse)
}
inline PROTOBUF_NDEBUG_INLINE ScoreResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void ScoreResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_score_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, new_score_) +
               sizeof(Impl_::success_));
}
ScoreResponse::~ScoreResponse() {
  // @@protoc_insertion_point(destructor:backend.ScoreResponse)
  SharedDtor(*this);
}
inline void ScoreResponse::SharedDtor(MessageLite& self) {
  ScoreResponse& this_ = static_cast<ScoreResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ScoreResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScoreResponse(arena);
}
constexpr auto ScoreResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ScoreResponse),
                                            alignof(ScoreResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScoreResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScoreResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScoreResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScoreResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScoreResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScoreResponse>(), &ScoreResponse::ByteSizeLong,
            &ScoreResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_._cached_size_),
        false,
    },
    &ScoreResponse::kDescriptorMethods,
    &descriptor_table_backend_5fapi_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScoreResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 44, 2> ScoreResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::backend::ScoreResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.message_)}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.user_id_)}},
    // int32 new_score = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScoreResponse, _impl_.new_score_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.new_score_)}},
    // bool success = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ScoreResponse, _impl_.success_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 new_score = 2;
    {PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.new_score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool success = 3;
    {PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 4;
    {PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\7\0\0\7\0\0\0"
    "backend.ScoreResponse"
    "user_id"
    "message"
  }},
};

PROTOBUF_NOINLINE void ScoreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.ScoreResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.new_score_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.new_score_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScoreResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScoreResponse& this_ = static_cast<const ScoreResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScoreResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScoreResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:backend.ScoreResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.ScoreResponse.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 new_score = 2;
          if (this_._internal_new_score() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_new_score(), target);
          }

          // bool success = 3;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_success(), target);
          }

          // string message = 4;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.ScoreResponse.message");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:backend.ScoreResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScoreResponse::ByteSizeLong(const MessageLite& base) {
          const ScoreResponse& this_ = static_cast<const ScoreResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScoreResponse::ByteSizeLong() const {
          const ScoreResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:backend.ScoreResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string message = 4;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // int32 new_score = 2;
            if (this_._internal_new_score() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_new_score());
            }
            // bool success = 3;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScoreResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScoreResponse*>(&to_msg);
  auto& from = static_cast<const ScoreResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.ScoreResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_new_score() != 0) {
    _this->_impl_.new_score_ = from._impl_.new_score_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScoreResponse::CopyFrom(const ScoreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.ScoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScoreResponse::InternalSwap(ScoreResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.success_)
      + sizeof(ScoreResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(ScoreResponse, _impl_.new_score_)>(
          reinterpret_cast<char*>(&_impl_.new_score_),
          reinterpret_cast<char*>(&other->_impl_.new_score_));
}

::google::protobuf::Metadata ScoreResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RankingRequest::_Internal {
 public:
};

RankingRequest::RankingRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:backend.RankingRequest)
}
RankingRequest::RankingRequest(
    ::google::protobuf::Arena* arena, const RankingRequest& from)
    : RankingRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RankingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RankingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.limit_ = {};
}
RankingRequest::~RankingRequest() {
  // @@protoc_insertion_point(destructor:backend.RankingRequest)
  SharedDtor(*this);
}
inline void RankingRequest::SharedDtor(MessageLite& self) {
  RankingRequest& this_ = static_cast<RankingRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RankingRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RankingRequest(arena);
}
constexpr auto RankingRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RankingRequest),
                                            alignof(RankingRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RankingRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RankingRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RankingRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RankingRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RankingRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RankingRequest>(), &RankingRequest::ByteSizeLong,
            &RankingRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RankingRequest, _impl_._cached_size_),
        false,
    },
    &RankingRequest::kDescriptorMethods,
    &descriptor_table_backend_5fapi_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RankingRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RankingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::backend::RankingRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 limit = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RankingRequest, _impl_.limit_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RankingRequest, _impl_.limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 limit = 1;
    {PROTOBUF_FIELD_OFFSET(RankingRequest, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RankingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.RankingRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.limit_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RankingRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RankingRequest& this_ = static_cast<const RankingRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RankingRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RankingRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:backend.RankingRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 limit = 1;
          if (this_._internal_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_limit(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:backend.RankingRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RankingRequest::ByteSizeLong(const MessageLite& base) {
          const RankingRequest& this_ = static_cast<const RankingRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RankingRequest::ByteSizeLong() const {
          const RankingRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:backend.RankingRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 limit = 1;
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RankingRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RankingRequest*>(&to_msg);
  auto& from = static_cast<const RankingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.RankingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RankingRequest::CopyFrom(const RankingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.RankingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RankingRequest::InternalSwap(RankingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.limit_, other->_impl_.limit_);
}

::google::protobuf::Metadata RankingRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RankingEntry::_Internal {
 public:
};

RankingEntry::RankingEntry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:backend.RankingEntry)
}
inline PROTOBUF_NDEBUG_INLINE RankingEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::backend::RankingEntry& from_msg)
      : user_id_(arena, from.user_id_),
        username_(arena, from.username_),
        _cached_size_{0} {}

RankingEntry::RankingEntry(
    ::google::protobuf::Arena* arena,
    const RankingEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RankingEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rank_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, rank_),
           offsetof(Impl_, score_) -
               offsetof(Impl_, rank_) +
               sizeof(Impl_::score_));

  // @@protoc_insertion_point(copy_constructor:backend.RankingEntry)
}
inline PROTOBUF_NDEBUG_INLINE RankingEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        username_(arena),
        _cached_size_{0} {}

inline void RankingEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rank_),
           0,
           offsetof(Impl_, score_) -
               offsetof(Impl_, rank_) +
               sizeof(Impl_::score_));
}
RankingEntry::~RankingEntry() {
  // @@protoc_insertion_point(destructor:backend.RankingEntry)
  SharedDtor(*this);
}
inline void RankingEntry::SharedDtor(MessageLite& self) {
  RankingEntry& this_ = static_cast<RankingEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.username_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RankingEntry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RankingEntry(arena);
}
constexpr auto RankingEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RankingEntry),
                                            alignof(RankingEntry));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RankingEntry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RankingEntry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RankingEntry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RankingEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RankingEntry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RankingEntry>(), &RankingEntry::ByteSizeLong,
            &RankingEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_._cached_size_),
        false,
    },
    &RankingEntry::kDescriptorMethods,
    &descriptor_table_backend_5fapi_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RankingEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 44, 2> RankingEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::backend::RankingEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 score = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RankingEntry, _impl_.score_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.score_)}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.user_id_)}},
    // string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.username_)}},
    // int32 rank = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RankingEntry, _impl_.rank_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.rank_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 2;
    {PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 rank = 3;
    {PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.rank_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 score = 4;
    {PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\24\7\10\0\0\0\0\0"
    "backend.RankingEntry"
    "user_id"
    "username"
  }},
};

PROTOBUF_NOINLINE void RankingEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.RankingEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  ::memset(&_impl_.rank_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.score_) -
      reinterpret_cast<char*>(&_impl_.rank_)) + sizeof(_impl_.score_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RankingEntry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RankingEntry& this_ = static_cast<const RankingEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RankingEntry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RankingEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:backend.RankingEntry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.RankingEntry.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string username = 2;
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "backend.RankingEntry.username");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 rank = 3;
          if (this_._internal_rank() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_rank(), target);
          }

          // int32 score = 4;
          if (this_._internal_score() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_score(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:backend.RankingEntry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RankingEntry::ByteSizeLong(const MessageLite& base) {
          const RankingEntry& this_ = static_cast<const RankingEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RankingEntry::ByteSizeLong() const {
          const RankingEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:backend.RankingEntry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string username = 2;
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // int32 rank = 3;
            if (this_._internal_rank() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_rank());
            }
            // int32 score = 4;
            if (this_._internal_score() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_score());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RankingEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RankingEntry*>(&to_msg);
  auto& from = static_cast<const RankingEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.RankingEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_rank() != 0) {
    _this->_impl_.rank_ = from._impl_.rank_;
  }
  if (from._internal_score() != 0) {
    _this->_impl_.score_ = from._impl_.score_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RankingEntry::CopyFrom(const RankingEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.RankingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RankingEntry::InternalSwap(RankingEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.score_)
      + sizeof(RankingEntry::_impl_.score_)
      - PROTOBUF_FIELD_OFFSET(RankingEntry, _impl_.rank_)>(
          reinterpret_cast<char*>(&_impl_.rank_),
          reinterpret_cast<char*>(&other->_impl_.rank_));
}

::google::protobuf::Metadata RankingEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RankingResponse::_Internal {
 public:
};

RankingResponse::RankingResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:backend.RankingResponse)
}
inline PROTOBUF_NDEBUG_INLINE RankingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::backend::RankingResponse& from_msg)
      : rankings_{visibility, arena, from.rankings_},
        _cached_size_{0} {}

RankingResponse::RankingResponse(
    ::google::protobuf::Arena* arena,
    const RankingResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RankingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:backend.RankingResponse)
}
inline PROTOBUF_NDEBUG_INLINE RankingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rankings_{visibility, arena},
        _cached_size_{0} {}

inline void RankingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RankingResponse::~RankingResponse() {
  // @@protoc_insertion_point(destructor:backend.RankingResponse)
  SharedDtor(*this);
}
inline void RankingResponse::SharedDtor(MessageLite& self) {
  RankingResponse& this_ = static_cast<RankingResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RankingResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RankingResponse(arena);
}
constexpr auto RankingResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RankingResponse, _impl_.rankings_) +
          decltype(RankingResponse::_impl_.rankings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RankingResponse), alignof(RankingResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RankingResponse::PlacementNew_,
                                 sizeof(RankingResponse),
                                 alignof(RankingResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RankingResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RankingResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RankingResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RankingResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RankingResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RankingResponse>(), &RankingResponse::ByteSizeLong,
            &RankingResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RankingResponse, _impl_._cached_size_),
        false,
    },
    &RankingResponse::kDescriptorMethods,
    &descriptor_table_backend_5fapi_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RankingResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RankingResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::backend::RankingResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .backend.RankingEntry rankings = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RankingResponse, _impl_.rankings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .backend.RankingEntry rankings = 1;
    {PROTOBUF_FIELD_OFFSET(RankingResponse, _impl_.rankings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::backend::RankingEntry>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RankingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.RankingResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rankings_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RankingResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RankingResponse& this_ = static_cast<const RankingResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RankingResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RankingResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:backend.RankingResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .backend.RankingEntry rankings = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rankings_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rankings().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:backend.RankingResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RankingResponse::ByteSizeLong(const MessageLite& base) {
          const RankingResponse& this_ = static_cast<const RankingResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RankingResponse::ByteSizeLong() const {
          const RankingResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:backend.RankingResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .backend.RankingEntry rankings = 1;
            {
              total_size += 1UL * this_._internal_rankings_size();
              for (const auto& msg : this_._internal_rankings()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RankingResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RankingResponse*>(&to_msg);
  auto& from = static_cast<const RankingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.RankingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rankings()->MergeFrom(
      from._internal_rankings());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RankingResponse::CopyFrom(const RankingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.RankingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RankingResponse::InternalSwap(RankingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rankings_.InternalSwap(&other->_impl_.rankings_);
}

::google::protobuf::Metadata RankingResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace backend
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_backend_5fapi_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
